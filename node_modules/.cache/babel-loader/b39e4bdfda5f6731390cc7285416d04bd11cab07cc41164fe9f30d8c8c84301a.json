{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yafit\\\\Desktop\\\\react-complete-guide-code-03-react-basics-working-with-components\\\\code\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChar = props => {\n  const totalMaximum = Math.max(props.dataPoints.map(dataPoint => dataPoint.value));\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"March\",\n    value: 0\n  }, {\n    label: \"April\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints,\n    max: totalMaximum\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChar;\nexport default ExpensesChar;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChar\");","map":{"version":3,"names":["React","Chart","ExpensesChar","props","totalMaximum","Math","max","dataPoints","map","dataPoint","value","chartDataPoints","label","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/yafit/Desktop/react-complete-guide-code-03-react-basics-working-with-components/code/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChar = (props) => {\r\n  const totalMaximum = Math.max(\r\n    props.dataPoints.map((dataPoint) => dataPoint.value)\r\n  );\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"March\", value: 0 },\r\n    { label: \"April\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense in props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} max={totalMaximum} />;\r\n};\r\n\r\nexport default ExpensesChar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAC3BH,KAAK,CAACI,UAAU,CAACC,GAAG,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,CAAC,CACrD;EACD,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,OAAO;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC5B;IAAEE,KAAK,EAAE,OAAO;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC5B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAEE,KAAK,EAAE,KAAK;IAAEF,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,MAAMG,OAAO,IAAIV,KAAK,CAACW,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE;IAC5CN,eAAe,CAACI,YAAY,CAAC,CAACL,KAAK,IAAIG,OAAO,CAACK,MAAM;EACvD;EAEA,oBAAO,QAAC,KAAK;IAAC,UAAU,EAAEP,eAAgB;IAAC,GAAG,EAAEP;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAClE,CAAC;AAAC,KAzBIF,YAAY;AA2BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}